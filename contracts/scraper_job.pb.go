// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scraper_job.proto

package contracts

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ScraperJob struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Requeue              bool     `protobuf:"varint,2,opt,name=requeue,proto3" json:"requeue,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScraperJob) Reset()         { *m = ScraperJob{} }
func (m *ScraperJob) String() string { return proto.CompactTextString(m) }
func (*ScraperJob) ProtoMessage()    {}
func (*ScraperJob) Descriptor() ([]byte, []int) {
	return fileDescriptor_80ffc8946c5701f5, []int{0}
}

func (m *ScraperJob) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScraperJob.Unmarshal(m, b)
}
func (m *ScraperJob) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScraperJob.Marshal(b, m, deterministic)
}
func (m *ScraperJob) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScraperJob.Merge(m, src)
}
func (m *ScraperJob) XXX_Size() int {
	return xxx_messageInfo_ScraperJob.Size(m)
}
func (m *ScraperJob) XXX_DiscardUnknown() {
	xxx_messageInfo_ScraperJob.DiscardUnknown(m)
}

var xxx_messageInfo_ScraperJob proto.InternalMessageInfo

func (m *ScraperJob) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ScraperJob) GetRequeue() bool {
	if m != nil {
		return m.Requeue
	}
	return false
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_80ffc8946c5701f5, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ScraperJob)(nil), "contracts.ScraperJob")
	proto.RegisterType((*Empty)(nil), "contracts.Empty")
}

func init() {
	proto.RegisterFile("scraper_job.proto", fileDescriptor_80ffc8946c5701f5)
}

var fileDescriptor_80ffc8946c5701f5 = []byte{
	// 160 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0x4e, 0x2e, 0x4a,
	0x2c, 0x48, 0x2d, 0x8a, 0xcf, 0xca, 0x4f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4c,
	0xce, 0xcf, 0x2b, 0x29, 0x4a, 0x4c, 0x2e, 0x29, 0x56, 0xb2, 0xe0, 0xe2, 0x0a, 0x86, 0xc8, 0x7b,
	0xe5, 0x27, 0x09, 0x09, 0x70, 0x31, 0x97, 0x16, 0xe5, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06,
	0x81, 0x98, 0x42, 0x12, 0x5c, 0xec, 0x45, 0xa9, 0x85, 0xa5, 0xa9, 0xa5, 0xa9, 0x12, 0x4c, 0x0a,
	0x8c, 0x1a, 0x1c, 0x41, 0x30, 0xae, 0x12, 0x3b, 0x17, 0xab, 0x6b, 0x6e, 0x41, 0x49, 0xa5, 0x51,
	0x19, 0x17, 0x47, 0x68, 0x90, 0x4f, 0x20, 0x48, 0x50, 0xc8, 0x84, 0x8b, 0xdd, 0x05, 0x22, 0x2f,
	0x24, 0xa0, 0x07, 0xb7, 0x45, 0x0f, 0xac, 0x50, 0x4a, 0x14, 0x49, 0x04, 0x61, 0xa9, 0x12, 0x03,
	0x48, 0x97, 0x6b, 0x1e, 0x44, 0x17, 0x76, 0x35, 0x52, 0x18, 0x86, 0x29, 0x31, 0x24, 0xb1, 0x81,
	0x3d, 0x63, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x10, 0x10, 0xfc, 0xe1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// URLQueueClient is the client API for URLQueue service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type URLQueueClient interface {
	Dequeue(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ScraperJob, error)
	Enqueue(ctx context.Context, in *ScraperJob, opts ...grpc.CallOption) (*Empty, error)
}

type uRLQueueClient struct {
	cc grpc.ClientConnInterface
}

func NewURLQueueClient(cc grpc.ClientConnInterface) URLQueueClient {
	return &uRLQueueClient{cc}
}

func (c *uRLQueueClient) Dequeue(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ScraperJob, error) {
	out := new(ScraperJob)
	err := c.cc.Invoke(ctx, "/contracts.URLQueue/Dequeue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *uRLQueueClient) Enqueue(ctx context.Context, in *ScraperJob, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/contracts.URLQueue/Enqueue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// URLQueueServer is the server API for URLQueue service.
type URLQueueServer interface {
	Dequeue(context.Context, *Empty) (*ScraperJob, error)
	Enqueue(context.Context, *ScraperJob) (*Empty, error)
}

// UnimplementedURLQueueServer can be embedded to have forward compatible implementations.
type UnimplementedURLQueueServer struct {
}

func (*UnimplementedURLQueueServer) Dequeue(ctx context.Context, req *Empty) (*ScraperJob, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Dequeue not implemented")
}
func (*UnimplementedURLQueueServer) Enqueue(ctx context.Context, req *ScraperJob) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Enqueue not implemented")
}

func RegisterURLQueueServer(s *grpc.Server, srv URLQueueServer) {
	s.RegisterService(&_URLQueue_serviceDesc, srv)
}

func _URLQueue_Dequeue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(URLQueueServer).Dequeue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contracts.URLQueue/Dequeue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(URLQueueServer).Dequeue(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _URLQueue_Enqueue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScraperJob)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(URLQueueServer).Enqueue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/contracts.URLQueue/Enqueue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(URLQueueServer).Enqueue(ctx, req.(*ScraperJob))
	}
	return interceptor(ctx, in, info, handler)
}

var _URLQueue_serviceDesc = grpc.ServiceDesc{
	ServiceName: "contracts.URLQueue",
	HandlerType: (*URLQueueServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Dequeue",
			Handler:    _URLQueue_Dequeue_Handler,
		},
		{
			MethodName: "Enqueue",
			Handler:    _URLQueue_Enqueue_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scraper_job.proto",
}
